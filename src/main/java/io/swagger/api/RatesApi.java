/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.RateItem;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-12-27T23:23:02.463Z")

@Validated
@Api(value = "rates", description = "the rates API")
@RequestMapping(value = "/ep85/stub-hub-test/1.0.0")
public interface RatesApi {

    @ApiOperation(value = "Get a ll stored Rate items", nickname = "getRates", notes = "Get all stored rate items ", response = RateItem.class, responseContainer = "List", tags={ "Rates", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Sucessfully submitted Rates", response = RateItem.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/rates",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<RateItem>> getRates();


    @ApiOperation(value = "Put rateItems to replace all current rate items", nickname = "submitRates", notes = "This path takes a PUT where rate information can be updated by submitting a modified rates JSON. This submitted JSON overwrites the stored rates. A rate is comprised of a price, time range the rate is valid, and days of the week the rate applies to. See the section Sample JSON for testing for the initial set of rate. This path when requested with a GET returns the rates stored. ", tags={ "Rates", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Sucessfully submitted Rates"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/rates",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> submitRates(@ApiParam(value = "Rate items to replace the current stored rates"  )  @Valid @RequestBody RateItem rateItem);

}
